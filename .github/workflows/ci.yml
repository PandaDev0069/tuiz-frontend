permissions:
  contents: read
name: ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create .env.local from repository secrets
        run: |
          cat > .env.local <<'EOF'
          NEXT_PUBLIC_API_BASE=http://localhost:8080
          NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          EOF

      - name: Use Node 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Typecheck
        run: npm run typecheck

      - name: Test
        run: npm run test

      - name: Build
        run: npm run build

  e2e:
    name: Playwright E2E (CI Optimized)
    runs-on: ubuntu-latest
    needs: web
    timeout-minutes: 10 # Add timeout to prevent hanging
    steps:
      - uses: actions/checkout@v4

      - name: Create .env.local from repository secrets
        run: |
          cat > .env.local <<'EOF'
          NEXT_PUBLIC_API_BASE=http://localhost:8080
          NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          EOF

      - name: Use Node 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: Install deps
        run: npm ci

      # Cache Playwright browsers to avoid re-downloading on every run
      # This can save 2-3 minutes per CI run
      - name: Cache Playwright browsers
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
            ~/.cache/ms-playwright-github
          key: playwright-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            playwright-${{ runner.os }}-

      - name: Install Playwright browsers
        run: |
          # Only install chromium for faster CI
          npx playwright install chromium
          # Install system dependencies if needed
          npx playwright install-deps chromium
        if: steps.cache-playwright.outputs.cache-hit != 'true'

      - name: Verify Playwright installation
        run: |
          echo "Cache hit: ${{ steps.cache-playwright.outputs.cache-hit }}"
          echo "Playwright browsers installed:"
          npx playwright --version
          ls -la ~/.cache/ms-playwright/ || echo "No cached browsers found"

      - name: Run Playwright E2E (CI Optimized)
        run: |
          echo "=== Playwright CI Configuration Debug ==="
          echo "Current directory: $(pwd)"
          echo "Files in current directory:"
          ls -la
          echo "Files in test directory:"
          ls -la src/test/e2e/
          echo "Using Playwright CI config: playwright.ci.config.ts"
          echo "Expected test count: 5 (ci-smoke.spec.ts only)"
          echo "Running: npm run e2e:ci"
          npm run e2e:ci || npm run e2e:ci-explicit

      - name: Check Playwright Report
        run: |
          echo "=== Checking Playwright Report ==="
          if [ -d "playwright-report" ]; then
            echo "Playwright report directory found:"
            ls -la playwright-report/
          else
            echo "No playwright-report directory found"
            echo "Current directory contents:"
            ls -la
          fi

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always() # Upload even if tests fail
        with:
          name: playwright-report
          path: playwright-report
          if-no-files-found: warn # Warn instead of failing
